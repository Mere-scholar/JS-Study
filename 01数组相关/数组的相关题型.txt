数组的相关题型及其详解  
题型网址：https://blog.csdn.net/lj745280746/article/details/70880809
题型网址：https://blog.csdn.net/oncemore520/article/details/80735593
提醒网址：https://blog.csdn.net/mashuai333/article/details/78408440

一、将 ‘abc123’ 倒序排列
	做法：str.split('').reverse().join('')
	解释：将字符串分割为数组 split()方法，然后使用reverse()方法将切割后的数组倒序，最后在使用join()方法将数组转化为字符串

二、将嵌套数组转化成正常的数组 const arr = [1,[2,[3],4],5] ===>[1,2,3,4,5]
	方法一：arr.join().split(','); 
	解释：通过join方法，将数组转化为字符串，然后再通过split()方法将得到的字符串转化为数组格式几个
	
	方法二：使用递归的写法（本方法结合es6新增的拓展运算符(三个点号)的方法）
		function fun(array){
			for(let i in array){
				array.splice(i , 1 , ...fun(array[i]))
			}
			return array
		}
		fun(array);
		
		拓展运算符(...)将一个数组或者数组对象转化为一系列用逗号隔开的值
			例如：const arr = [1,2,3,4,5];       console.log(...arr);

三、数组去重：
	题型：var arr=[1,1,1,2,2,1,3,1,3,4,5,6];  要求结果：var arr=[1,2,3,4,5,6];
	
	解决办法1：	function arrDelLikeElement (array) {
					const result = []; //定义一个空的数组用来存放去重后的数组
					const obj = {}; //定义一个变量用来循环遍历数组的条件
					for(let i in array){
						if(!obj[array[i]]){  //判断对象中是否有该键名
							result.push(array[i]);  //将符合条件的值添加到空数组中去
							obj[array[i]] = i;	//给obj对象添加属性名与属性值
						}
					}
					return result;	//将去重后的数组返回出去
				}
				arr = arrDelLikeElement(arr);
	解决办法2：利用Set(集合)对象的方法，进行数组去重
		Set(集合)对象允许储存任何类型的值，这些值可以作为原始值或对象，但是值只能是唯一的,如果有多个相同的值也被认为是一个值，即可利用此方法结合for...of来进行数组去重
			例如：
				var arrLike = [1,5,5,4,7,8,2,1,2,3,4]
				function arrayDelLikeElement(array) {
					//将传入的数组参数作为javascript中的创建一个Set(集合)对象的方法中的参数
					var arrSet = new Set(array);
					//定义一个空数组用来接收集合循环遍历的值
					var arrEmpty = [];
					for (const value of arrSet) {
						arrEmpty.push(value);
					}
					array=arrEmpty;
					return array
				}
				arrLike = arrayDelLikeElement(arrLike);
				console.log(arrLike);

四、数组的冒泡排序
	题型：var arr = [1,5,8,4,3,69,7];  要求结果:[1,3,4,5,7,8,69];
	解决办法1：
				function bubSort (array) {
					for (var i = 0;i<array.length-1;i++) {
						for (var j=i+1;j<array.length;j++) {
							//获取数组中的前一个值与后一个值进行比较
							if(array[i]>array[j]){
								//定义一个值作为交换的中间值
								var temp = array[i];
								array[i] = array[j];
								array[j] = temp;
							}
						}
					}
					return array;
				}
				arr = bubSort(arr);
				
五、找出两个数组中相同的最小的元素
	题型：const a = [1, 2, 5, 9, 10] , b = [3, 4, 2, 9, 10] 要求结果 ：9
	解决办法：（下边的解决办法有bug的存在，需要进一步的改正）
			function minLikeElemet(a,b){
				let i=j=0;
				while(i<a.length || j<b.length){
					if(a[i] === b[j]){
						return a[i]
					}else if(a[i] > b[j]){
						j++;
					}else if(a[i] < b[j]){
						i++;
					}
				}
				return null;
			}
			console.log(minLikeElemet(a,b))
			
六、打乱数组的顺序
	题型：将一组数组中的元素的位置，随机打乱排序
	解决办法：
		使用sort方法与随机数的方式将数组打乱顺序重新排序
			arr = arr.sort(function () {
				return 0.5 - Math.random();
			});
			console.log(arr)
	
七、找出元素在数组中的位置
		例子：	var a = ["a" , "b" ,"c"];
				for (var i = 0;i<a.length;i++) {
					if(a[i] == "c"){
						console.log(i)
					}
				}

	











	